plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "5.1.0.4882"
	id "jacoco"
}

group = 'com.e-mail'
version = getVersion()

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core:4.29.1'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.22'
	implementation 'org.modelmapper:modelmapper:3.2.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'


    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:3.4.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:3.5.0'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sonar {
	//FIXME вынести в переменные окружения
	properties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "admin"
		property "sonar.password", ";tyz2002"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	reports {
		xml.required = true
	}
	dependsOn test
}

def getVersion() {
	return "${MAJOR}.${MINOR}.${PATCH}"
}